<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>科研笔记 on 主页</title>
    <link>https://liuxunchen.github.io/xliu-group/post/</link>
    <description>Recent content in 科研笔记 on 主页</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 23 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://liuxunchen.github.io/xliu-group/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>甲醛的光谱和PLIF测温</title>
      <link>https://liuxunchen.github.io/xliu-group/post/ch2o/</link>
      <pubDate>Sun, 23 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://liuxunchen.github.io/xliu-group/post/ch2o/</guid>
      <description>&lt;p&gt;在燃烧诊断中，平面激光诱导荧光（planner LIF）是常用的对火焰成像的方法，常用的三种双原子自由基是 OH、NO、CH，例如经典的羟基双色PLIF测温方法就是在283nm波段测 Q1(14)和Q1(5)跃迁对应的LIF信号的强度比值的来计算OH在这两个态的布局数比值来测温[1]。&lt;/p&gt;&#xA;&lt;p&gt;当然，定量计算用的数据，都是在经典的LIFbase 软件中包含了的这三个分子的激发态跃迁速率数据，用软件可以用来定量预测计算LIF光谱和算温度。这些基础的工作都是Crosley等大神在1980-1990年代做的[2][3]，那个时候算是原子分子物理的黄金时代吧。甚至更早，二战之后那段时间，是分子光谱发展的黄金年代，把战时大量做的雷达里面的微波源拿出来就可以测微波光谱，不同的分子，不同的波段，一个一个测过去。&lt;/p&gt;&#xA;&lt;p&gt;燃烧流体中为何要对这些自由基成像，而不是测稳定的N2和O2这些分子呢？原因是这些稳定分子的HOMO－LUMO能级差比较大，电子跃迁都在真空紫外波段，要在地球大气层中实际应用，就没办法了。所以一般用红外吸收光谱的方法来测水、二氧化碳这些有偶极的稳定分子，毕竟体积分数大多了。&lt;/p&gt;&#xA;&lt;p&gt;NdYAG激光的三倍频在355nm，可以直接测到甲醛分子的荧光信号，所以研究甲醛的LIF光谱，也很有实际应用的意义。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;甲醛分子的光谱研究的比较多了，是最早被研究的多原子分子。&#xA;甲醛只有C、O两个重原子，加上两个氢原子，在基态，这四个原子核是平面的。由于原子数多，甲醛的光谱就比较复杂，不像双原子那样，只需要考虑一个转动常数B，而要考虑A B C 三个转动常数。1983年 Dennis Clouthier 和 Ramsay 在Annual Review of Physical Chemistry 上的综述[4]，分子的基态和激发态的光谱参数基本都有了，可以用来对甲醛分子在355nm 处激发态的吸收光谱做仿真。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://liuxunchen.github.io/xliu-group/post/ch2o/absorption.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;absorption&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;355nm 这个吸收带对应的是355nm这里的4^1_0 弯曲振动模式。有趣的是，这个吸收带的高分辨率光谱的工作还没发表过。&#xA;Clouthier综述中提到数据来自 Ramsay 和 Till 未发表的工作，后人似乎一直也就这么用了。再往前，范德堡大学的Innes，我们Alberta大学的Birss 都提到最早是UCL的 Parkin 的博士论文中提到过这个band。南方科大的杨东老师去上海交大交流时候，当时杨老师还在UCL，问他去复印的Parkin的博士论文。感谢杨老师帮忙找到的论文！但看了半天好像也没具体到这个band，似乎是因为太弱了吧。可能也是因为和别的振动模式有耦合干扰。&lt;/p&gt;&#xA;&lt;p&gt;把杨老师复印的Parkin 的博士论文作为附件上传在这里吧，的确不好找。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://liuxunchen.github.io/xliu-group/post/ch2o/1962-Parkin.pdf&#34;&gt;Download file&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Anyway，就用Couthier 论文中的参数来仿真这个吸收带，似乎也还不错。找到了哈佛大学2005年的一篇文章[5]，里面有转动能级分辨的吸收光谱，和仿真对比，效果还不错。&#xA;整体上对应的很好的，但要用的355nm就是在28183cm-1这里，正好有微扰，吸收峰对不上。&#xA;所以仿真的光谱和实验测到的光谱不能完全一致，但是可以定量的对应上是没问题的。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://liuxunchen.github.io/xliu-group/post/ch2o/simulation.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;absorption-simulation&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;实验中制备高温的甲醛还是比较难的。甲醛在高温时候会聚合反应。需要一边加热一边进料。&#xA;好在，只测温的话对浓度的控制要求不高。我们直接在coflow 扩散火焰里面测火焰燃烧中产生的甲醛。&#xA;层流火焰很稳定，我们可以一个点一个点扫描激光波长，拍PLIF信号，得到每个点上的LIF光谱。结合层流火焰里面每个点的温度，就知道了不同温度下的甲醛LIF光谱。&#xA;这里，特别要感谢金汉峰博士，帮忙找人做的仿真计算，算了3个不同的火焰。未来可以都测测，实验和仿真对照一下。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;甲醛双色PLIF测量，借鉴了用OPO的单激光单相机的串脉冲激光双色PLIF方法，也是很新的方法。&#xA;很好用，发出一对不同波长的激光对，不用管时间和空间上的波动了。&#xA;用355nm 三倍频直接测，激光能量大，很方便。&#xA;这个方法很有发展前途，266nm 四倍频可以测到OH、NO，未来应该可以取代染料激光、OPO这些复杂的步骤，在实验台测量上很有用。&#xA;最近在工程热物理学报发表了一篇论文，详细讲了这个方法。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://liuxunchen.github.io/xliu-group/post/ch2o/paper.pdf&#34;&gt;2024 - 单激光单相机双色PLIF测量火焰温度场&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[1]: KOSTKA S, ROY S, LAKUSTA P J, 等. Comparison of line-peak and line-scanning excitation in two-color laser-induced-fluorescence thermometry of OH[J/OL]. Applied Optics, 2009, 48(32): 6332. DOI:10.1364/AO.48.006332.&lt;/p&gt;</description>
    </item>
    <item>
      <title>激光诊断方法</title>
      <link>https://liuxunchen.github.io/xliu-group/post/method/</link>
      <pubDate>Sat, 22 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://liuxunchen.github.io/xliu-group/post/method/</guid>
      <description>&lt;p&gt;激光燃烧诊断技术通过测量激光与燃烧场中分子的吸收、发射、散射相互作用，得到原位定量的火焰温度、组分浓度和流场密度、速度等信息，具有极高的时空分辨率、灵敏度与选择性， 是最主要的非接触燃烧实验方法。常见方法包括瑞利散射、米散射、拉曼散射、荧光散射、吸收效应和多普勒效应等过程，这几种测试方法各有优缺点、互为补充，总的发展趋势是从线平均测量到场分辨测量，从低频稳态测量到高频动态测量。激光燃烧诊断的核心设备是激光光源。可以说是“一代激光器,一代测试方法”。&lt;/p&gt;&#xA;&lt;p&gt;光谱诊断方法的优点是对火焰无干扰，成像方法可以提供较高的时间和空间分辨率，通过图像能够准确地区分不同组分，并精确地测量温度、不同组分的浓度。&#xA;下面是常用的几种激光诊断方法的示意图。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://liuxunchen.github.io/xliu-group/post/method/method.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;常见的激光诊断方法 [Wolfrum](https://pubs.rsc.org/en/content/articlelanding/2002/fd/b107878j).&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;应用光谱研究火焰的历史可以追溯到1860年Kirchhoff和Bunsen针对火焰中金属的光谱测量和1857年Swan对蜡烛火焰的测量。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://liuxunchen.github.io/xliu-group/post/method/tree.png&#34; width=&#34;auto&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;学术家谱&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;博士导师研究分子光谱，发现导师的前面的导师可以追溯到剑桥大学的Sugdun，是做了很多工业实际应用研究。再之前的 Norrish 就是做的用光谱方法研究闪光灯热解。&#xA;现在算是重新回到了应用研究上来。&lt;/p&gt;&#xA;&lt;p&gt;燃烧诊断主要是光测和光谱知识在燃烧中的应用。宏上要观理解为何要做实验和发展燃烧诊断方法，为何需要诊断方法解决什么问题。&#xA;参考driezler 上课ppt中的说法，燃烧诊断的任务包含如下几个：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;燃烧理论，这方面比较成熟了；&lt;/li&gt;&#xA;&lt;li&gt;仿真对照，精细测量，验证CFD；&lt;/li&gt;&#xA;&lt;li&gt;燃烧器中的火焰结构和运动（主要是成像），研究燃烧现象，火焰结构和运动，湍流燃烧机理，包含标准火焰的研究；&lt;/li&gt;&#xA;&lt;li&gt;发展技术和方法，发展实际应用的传感器（tdlas 主要问题是空间分辨率问题，对于燃烧器的尺寸来说，TDLAS测量的空间分辨率太粗，可以做传感器，但研究其他问题不够用）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;燃烧诊断研究基本问题是测量温度，组分，压力，速度；进一步需要和燃烧学结合，目标和主线是研究火焰和燃烧室，燃烧诊断的目标是解决燃烧研究的问题。因此很多时候，是要把特定的实验方法用在特定的燃烧研究里面。&#xA;诊断研究现在阶段需求，理论研究比较成熟，要以工业应用需求为主，还是从燃烧室的现象和要解决的问题出发。&lt;/p&gt;&#xA;&lt;p&gt;一个光谱诊断方法的简介文件。&#xA;&lt;a href=&#34;https://liuxunchen.github.io/xliu-group/post/method/%E5%85%89%E8%B0%B1%E8%AF%8A%E6%96%AD.pdf&#34;&gt;光谱诊断方法简介&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;如何做燃烧的仿真？湍流燃烧还是很难算的，Fluent 可以大概算算。用 Cantera 和 Chemkin 算一般的反应动力学计算，比如火焰温度。&#xA;分子光谱仿真？就很小众了，图形化的有 pgophor，最全的应该是 SPFIT/SPCAT 。LIFbase是专门的几个双原子分子的LIF光谱数据库仿真。&#xA;几何光学仿真用 zemax，但感觉一般也不需要。&lt;/p&gt;</description>
    </item>
    <item>
      <title>热工基础</title>
      <link>https://liuxunchen.github.io/xliu-group/post/lec1/</link>
      <pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://liuxunchen.github.io/xliu-group/post/lec1/</guid>
      <description>&lt;p&gt;热工基础课程的前两周上完了，讲了前4章。基本把热力学的内容讲完了。&#xA;在极少的课时下，如何讲完？&#xA;热力学作为很成熟的知识，的确也应该更加精炼，大学里面的课程，总的趋势就是成熟的知识逐渐减少课时。学生总要学习新知识。未来可能中学里面就要学很多现在大学的知识吧。&lt;/p&gt;&#xA;&lt;p&gt;我想我做了比较好的尝试。思路是从统计力学2个基本假设开始讲，引出配分函数和熵的概念、不同的系综；进而可以联系到热力学的4个基本假设，然后建立热力学函数。&#xA;这门课不讲化学平衡和相平衡。&#xA;主要还是内能和焓的概念。&#xA;然后是理想气体，从熵的公式引出绝热等过程的熵变和热功变化。&lt;/p&gt;&#xA;&lt;p&gt;从几个基本假设出发的思路还是很清晰的。避免了从现象出发的很多绕弯子。也是前面推荐Daily书的初衷。&lt;/p&gt;&#xA;&lt;p&gt;第三周开始讲喷管流动，这部分主要是可压缩的空气动力学。参考书主要是《Thermodynamics-An engineering approach》和清华大学吴望一的《流体力学》。&#xA;不得不说，老外的书详细，适合自学和教学；但是吴的书，精妙之处更多，很多数学推导更简洁更优美。多看几本书总有好处，空气动力学经典的Anderson 以后再看吧。&lt;/p&gt;&#xA;&lt;p&gt;第四周开始讲传热。首先是从随即行走模型导出了扩散方程。按照这个思路比较好，从基本原理出发，比较直观地就可以得到傅里叶公式。&#xA;传热的其他部分没有很多重要的内容了，毕竟现在都是用有限元直接算就可以。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;./lec1.pdf&#34;&gt;Lecture-1&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TDLAS</title>
      <link>https://liuxunchen.github.io/xliu-group/post/tdlas/</link>
      <pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://liuxunchen.github.io/xliu-group/post/tdlas/</guid>
      <description>&lt;p&gt;之前写过的一个TDLAS技术的简介，好像被放在某本书里面了。但当时版本可能有笔误，故在此放一下最新的版本。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://liuxunchen.github.io/xliu-group/post/tdlas/tdlas.pdf&#34;&gt;TDLAS&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;吸收光谱研究的是光与物质作用过程中最基本的吸收过程，是最基本的燃烧诊断方法。吸收光谱有易于操作、选择性强、定量准确、灵敏度高的优点。&lt;/p&gt;&#xA;&lt;p&gt;在燃烧诊断中，通过测量透射光强被火焰吸收而减弱的定量信息，可以获得燃烧体系中分子浓度、温度、压力和速度的信息。&lt;/p&gt;&#xA;&lt;p&gt;现代的激光吸收光谱用的是高亮度、窄线宽的红外可调半导体激光光源，通过扫描激光的波长，光电探测器直接测量不同波长激光在通过燃烧体系后的光强损失，从得到所扫描的激光波长范围内的火焰吸收光谱。&lt;/p&gt;&#xA;&lt;p&gt;吸收光谱所测量的光谱有位置、强度、和线宽三个基本信息，可以定量地研究反应流中分子浓度、温度、压力和流速等各种信息。谱线的位置由所测量分子的能级结构决定，与燃烧体系的温度压力等热力学状态与流场结构无关。因此可以通过测量燃烧体系的吸收谱准确地区分所测量的不同分子，具有极高的选择性(selectivity)。&#xA;需要学一点分子光谱学。&lt;/p&gt;&#xA;&lt;p&gt;在高压燃烧环境中，分子碰撞导致的能级降低和多普勒效应还会引起的微小的吸收峰位置的移动。&lt;/p&gt;&#xA;&lt;p&gt;在谱线强度测量方面结合高频调制、光腔共振等方法，吸收光谱可以测量ppt量级的分子浓度，具有很高的灵敏度(sensitivity)。研究吸收光谱所测量的谱线吸收强度只需考虑体系状态从低能级到高能级的光子吸收这一简单过程，可以忽略上能级过程，实验和理论计算均可较准确的定量研究。因此吸收光谱的最大特点为定量准确(absolute)。&lt;/p&gt;&#xA;&lt;p&gt;文章前面介绍了一些Einstein A B 系数的介绍。&#xA;可以参考HITRAN 官方的介绍文献：&lt;/p&gt;&#xA;&lt;p&gt;Šimečková M, Jacquemart D, Rothman L S, Gamache R R, Goldman A. Einstein A-coefficients and statistical weights for molecular absorption transitions in the HITRAN database[J]. Journal of Quantitative Spectroscopy and Radiative Transfer, 2006, 98(1): 130–155.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://liuxunchen.github.io/xliu-group/post/tdlas/beer.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;absorption model&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;一个比较重要的结论是&#xA;通过联系宏观上的观测量光强 I 和微观的分子跃迁常数 B 与分子数密度 N，得到Beer-Lambert 定律：&lt;/p&gt;&#xA;&lt;p&gt;d \tau(v) = k(v) N dl&lt;/p&gt;&#xA;&lt;p&gt;这里\tau(v)是频率v处的光学厚度（optical depth）；k(v)是吸收系数（absorption coefficient）,单位是[1/(molecule cm-3 cm)]；&#xA;定义\mu = k(v) N 为衰减系数（attenuation coefficient）,单位是 [1/cm]；&#xA;k(v) 在波数（wavenumber）轴上的积分得到线强 S，单位是[cm-1/ molecule· cm-3· cm]，进行单位约化后，也可以被写为[1/cm-1]&lt;/p&gt;</description>
    </item>
    <item>
      <title>lvpyio</title>
      <link>https://liuxunchen.github.io/xliu-group/post/20250220/</link>
      <pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://liuxunchen.github.io/xliu-group/post/20250220/</guid>
      <description>&lt;p&gt;今天尝试了 LaVision 公司的 python package，太坑了，又发现 DeepSeek 太香了。&lt;/p&gt;&#xA;&lt;p&gt;lvpyio 的网址：&#xA;&lt;a href=&#34;https://www.lavision.de/en/downloads/software/python_add_ons.php&#34;&gt;https://www.lavision.de/en/downloads/software/python_add_ons.php&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;之前都是把 DaVis 计算得到的速度场或者标量场结果存成文本文件，例如 B00001.txt 再用python读。下面是我写的读标量场和矢量场的函数，其中load_piv 中 size 参数非0时，会将数据 binning 降低数据数量，提高对比度。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#%% read DaVis txt file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;load_piv&lt;/span&gt;(filename, size):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    extract PIV data&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    filename: txt file name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    size: average size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lavision &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(filename)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    step, xnum, ynum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lavision&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lavision&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(step)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xnum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(xnum)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ynum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(ynum)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(size)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    oned &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(filename, decimal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, skiprows&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(oned&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[:, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], (xnum, ynum), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(oned&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[:, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], (xnum, ynum), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    U &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(oned&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[:, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], (xnum, ynum), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    V &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(oned&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[:, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;], (xnum, ynum), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; size &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; X[:int(xnum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; size, :int(ynum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; size]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(int(xnum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size), size, int(ynum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size),size)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Y[:int(xnum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; size, :int(ynum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; size]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(int(xnum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size), size, int(ynum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size),size)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        U &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; U[:int(xnum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; size, :int(ynum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; size]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(int(xnum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size), size, int(ynum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size),size)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        V &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; V[:int(xnum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; size, :int(ynum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; size]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(int(xnum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size), size, int(ynum &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; size),size)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; X&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float32&amp;#39;&lt;/span&gt;)                                                                           &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Y&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float32&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    U &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; U&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float32&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    V &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; V&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float32&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; step, xnum, ynum, X, Y, U, V   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;load_plif&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plif &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(filename)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    firstline &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plif&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_num,y_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; firstline[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    delta_x,x0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; firstline[&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    delta_y,y0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; firstline[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plif&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(x_num)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(y_num)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(x0)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(y0)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    delta_x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(delta_x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    delta_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(delta_y)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(x0, x0&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(x_num)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;delta_x, delta_x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(y0, y0&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(y_num)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;delta_y, delta_y)   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plif_txt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(filename, decimal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, skiprows&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plif &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plif_txt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x_num,y_num,X,Y,plif&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;貌似用官方的软件包可以读更多的文件格式吧。于是就开始安装了。&#xA;首先发现不知道为什么 spyder 启动出问题了，numpy 版本不对，需要重装 numpy，就好了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TDLAS的问题</title>
      <link>https://liuxunchen.github.io/xliu-group/post/20241108/</link>
      <pubDate>Fri, 08 Nov 2024 21:22:03 +0800</pubDate>
      <guid>https://liuxunchen.github.io/xliu-group/post/20241108/</guid>
      <description>&lt;p&gt;最见看到之前课题组近年燃烧年会发的会议论文，没有接受口头报告，只有一个海报。&#xA;&lt;figure&gt;&lt;img src=&#34;https://liuxunchen.github.io/xliu-group/post/20241108/title.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;论文题目&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;是用我发展的4um QCL测CO2的方法在腔体里面测固体颗粒燃烧的信号。&#xA;看了一下实验记录，是2020年夏天做的实验。&#xA;固体推进剂这个方向，本来也不是我该做的，合作只是奉命服务。&lt;/p&gt;&#xA;&lt;p&gt;但也非常欣慰，毕竟发表了，了却了一桩心事。顾明明博士本来不做 TDLAS，去交大做博后才接触，青年基金也是做的中红外TDLAS 数据处理的方法。把 line mixing 模型用来处理 4.2um 的CO2带头部分的谱线，还是挺成功。但即使是这个新的模型，根本问题还是参数多，需要调。应用起来就不够直接。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://liuxunchen.github.io/xliu-group/post/20241108/setup.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;实验装置图&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;这个实验不是很成功。根本问题还是由于 TDLAS 是线积分测量，无法区分腔体内部路径上不同位置的信息。&#xA;测到的温度，其实是路径平均的温度，虽然4.2um那高温信号占主要的，但也要考虑这么长路径上腔体里面其他位置扩散出去的CO2的干扰。&#xA;其实还不如不加腔体，那样的话在大气环境中还扩散的快一点。&lt;/p&gt;&#xA;&lt;p&gt;这就叫路径依赖。&lt;/p&gt;&#xA;&lt;p&gt;想起来之前还做过一个失败的实验。用5um NO2 吸收逢的QCL激光测在真空腔体里面的 不同NH3含量的Mckenna 火焰。这个是之前用石英喷嘴取样加紫外光电离质谱做过的体系。用取样测量方法的话，周围环境中的燃烧产物、扩散出去的物质是不用管的。但是用吸收光谱的方法就不行了。低压环境倒是有利于TDLAS测量，NO2 两个分裂的吸收峰很清楚，但是测到的温度又很低，后来发现是因为腔体里面有扩散出去的产物的吸收。&#xA;这就很难办了。也可以吹扫，但再加上这些过程复杂的方法，都很不可靠。&lt;/p&gt;&#xA;&lt;p&gt;核心问题，还是如何在TDLAS线积分信号的基础上得到空间分辨率。考虑过用饱和吸收，或者用FLDI频谱特征去提取。但似乎都不很靠谱。&#xA;TDLAS方法在大气研究中有成功的应用，比如用吸收池抽气进去低压测量各种污染物的浓度，再比如卫星测大气柱的辐射或者吸收光谱。&#xA;这是因为空间尺度不同的问题。大气研究中，空间尺度大，TDLAS测量的就是一个点的数据。而燃烧诊断中，研究的火焰尺寸不会很大，TDLAS 测量的一条路径上，需要考虑分布不均匀的问题。&#xA;最好还是用综横多路再反演的方法得到空间分辨率。&#xA;这样空间分辨率就不会很高，若要提高空间分辨率，似乎很难。最近有用高速红外相机做探测器来测TDLAS光谱的，把一个激光束扩束后，在红外相机上成像测量扫描波长后图像强度。&#xA;如果红外相机帧频不够高，还可以在采集端用光纤束分光，也可以提高空间分辨率，多个pd探测器，多路数据采集。&#xA;这样就可以得到比较高的空间分辨率。但成本的确也高。&lt;/p&gt;</description>
    </item>
    <item>
      <title>介绍好书：John Daily 统计热力学</title>
      <link>https://liuxunchen.github.io/xliu-group/post/daily-book/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://liuxunchen.github.io/xliu-group/post/daily-book/</guid>
      <description>&lt;p&gt;&lt;figure&gt;&lt;img src=&#34;https://liuxunchen.github.io/xliu-group/post/daily-book/daily-book-cover.jpg&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;封面&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;最近读到一本好书，剑桥大学出版社2018年出版的 John Daily 《Statistical Thermodynamics an Engineering approach》。&#xA;最早知道 Daily 还是读到他在PECS上关于LIF 的综述，算是比较早期这方面的综述了。当时他还是在伯克利大学，后来去了科罗拉多大学主持了燃烧研究中心做机械系主任。&#xA;这本书是John 在伯克利大学和科罗拉多大学教研究生《高等热力学》的教材。&lt;/p&gt;&#xA;&lt;p&gt;面向热流体方向（机械工程、航空工程、动力工程）的热力学气体动力学课程，早期有 Sonntag &amp;amp;  Van Wylen:  Fundamentals of Statistical Thermodynamics ; 斯坦福大学的 Vincenti &amp;amp; Kruger: Introduction to Physical Gas Dynamics。&#xA;作者的这本教材可以看作是前面书的简化版，包含了最主要的内容。&#xA;之前给本科上的物理化学和准备的热工基础课程想包含的内容，这本书都有：量子力学、分子能级、配风函数、热力学量、JANAF表、Boltzmann方程等等，基本该涉及的知识点都有。&lt;/p&gt;&#xA;&lt;p&gt;作为研究生教材，这本书更多的可以作为一个地图和指引，告诉研究生哪些内容需要去看的提要。面向本科生教学的话，可以先简单介绍一些基础知识。这本书还有对应的Coursera 课程，有视频和PPT，一开始就介绍了一些基本知识。&#xA;&lt;a href=&#34;https://www.coursera.org/learn/macroscopic-microscopic-thermodynamics&#34;&gt;https://www.coursera.org/learn/macroscopic-microscopic-thermodynamics&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;这本书最大的优点是采用了公理化的热力学体系，即 Herbert B. Callen 在 《Thermodynamics and an Introduction to Thermostatistics》 中提出的四大公设的体系。&#xA;一门学科在历史上发展的顺序和学科体系查成熟后的体系肯定是不同的。&#xA;最终在课程中的呈现，肯定和历史发展的顺序不同。&#xA;比如现代量子力学的教学，如果学时多，尚可以慢慢来从两朵乌云开始讲，但很多时候已经不再是按照历史顺序来讲了，而是按照现代的体系来讲。&lt;/p&gt;&#xA;&lt;p&gt;在AI时代，本科生要学的东西越来越多。现在教学的课时越来越少了，传统课程的教学要跟上时代，就是要体现新的思路，顺应时代的发展。&#xA;可以预见，未来的热流体课程中，热力学和统计力学也不应该分开慢慢讲了，也不应该第一定律、第二定律出发那样讲了。&#xA;未来的热力学教学，应该按照这样简洁明了的公理化体系来讲，节省时间。&#xA;时代的进步发展总是这样，留给一成不变旧内容的时间总是越来越少。&lt;/p&gt;</description>
    </item>
    <item>
      <title>新网站上线了</title>
      <link>https://liuxunchen.github.io/xliu-group/post/hello-world/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://liuxunchen.github.io/xliu-group/post/hello-world/</guid>
      <description>&lt;p&gt;今天是国庆节，才有有时间投个稿，又上线了课题组的网站。&lt;/p&gt;&#xA;&lt;p&gt;中国的科研工作者真不容易。放假了才有自己的时间。&#xA;不过外国的科研人员也不容易。我国只不过是现在本科生都有国自然了；前几天看到一篇OL上的文章就是美国高中生发的。为了卷大学入学嘛，可以理解。那小孩的爹也挺厉害。&lt;/p&gt;&#xA;&lt;p&gt;以后我们的高中生就可以进实验室搞SCI嘛，欢迎本科生来我实验室做点研究，最好能发点SCI论文。只不过是刚到山科大来，没给本科生上课，接触学生还不多。&#xA;研究生就不用说了，硕士基金，博士博士后基金都卷起来。&#xA;同行们多来关注我们吧！&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
